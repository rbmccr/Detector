{"version":3,"sources":["../snatcher.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["class Snatcher {\r\n\r\n  constructor(x = {}) {\r\n    this.config = x;\r\n  }\r\n\r\n  acceptedConfigKeys = ['try', 'catch', 'finally', 'silence']\r\n  acceptedConsoleMethods = ['error', 'group', 'info', 'log', 'table', 'trace', 'warn'];\r\n\r\n  // console outputs\r\n  badLogTypeError = '[Snatcher] The logType provided is not permitted.'\r\n  configError = '[Snatcher] Invalid config object.'\r\n  supersedeError = '[Snatcher] Function provided returns a truthy value but it is superseded by a value returned from the finally block.'\r\n\r\n  watch(callback, config = this.config) {\r\n    if (!this._configIsValid(config)) return this._disclose(config, 'error', this.configError);\r\n    const ct = config.try;\r\n    const cc = config.catch;\r\n    const cf = config.finally;\r\n\r\n    let callbackReturnVal;\r\n\r\n    try {\r\n      callbackReturnVal = ct ? this._try(config, callback) : callback();\r\n      return callbackReturnVal;\r\n    }\r\n    catch (err) {\r\n      if (cc) return this._catch(config, err);\r\n    }\r\n    finally {\r\n      if (cf) return this._finally(config, callbackReturnVal);\r\n    }\r\n  }\r\n\r\n  _catch (config, err) {\r\n    const cc = config.catch;\r\n\r\n    if (cc.logType && this.acceptedConsoleMethods.includes(cc.logType)) { this._disclose(config, cc.logType, err); }\r\n    else if (cc.logType) { this._disclose(config, 'error', this.badLogTypeError); }\r\n\r\n    let x;\r\n    if (cc.execute) x = cc.execute();\r\n    if (x) return x;\r\n    if (cc.provideErr) return err;\r\n    return cc.default;\r\n  }\r\n\r\n  // check for misspelled or illegal keys OR for an improper argument type\r\n  _configIsValid (config) {\r\n    return this._isObject(config) && !Object.keys(config).some(val => !this.acceptedConfigKeys.includes(val));\r\n  }\r\n\r\n  _disclose (config, logType, msg) {\r\n    if (config.silence) return;\r\n    console[logType](msg);\r\n  }\r\n\r\n  _finally (config, callbackReturnVal) {\r\n    const cf = config.finally;\r\n\r\n    let x;\r\n    if (cf.execute) x = cf.execute();\r\n    if (x || cf.default && callbackReturnVal) this._disclose(config, 'warn', this.supersedeError);\r\n    if (x) return x;\r\n    return cf.default;\r\n  }\r\n\r\n  _isObject (obj) {\r\n    return !!obj && obj === Object(obj) && obj.constructor !== Array;\r\n  }\r\n\r\n  _try (config, callback) {\r\n    const ct = config.try;\r\n\r\n    let x;\r\n    x = callback();\r\n    if (x) return x;\r\n    if (ct.execute) x = ct.execute();\r\n    if (x) return x;\r\n    return ct.default;\r\n  }\r\n\r\n}\r\n\r\nexport default Snatcher;\r\n"]}